ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
# --------------------------------------------------------------------------
# Output the plot to screen
p1;
}
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(one.data$log10_p_value), 0)) +
ggplot2::geom_point(aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (alpha ("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (alpha ("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo.data
go_res <- data.frame(
go_id = c('GO:0009268', 'GO:0010447', 'GO:0000027', 'GO:0042255', 'GO:0042257', 'GO:0042273', 'GO:0030880', 'GO:0009775'),
p.val = c(1e-14, 1e-14, 1e-297, 1e-297, 1e-297, 1e-297, 1e-17, 1e-13),
genes = c('ADAM8/ALOX5/AMPD3/ANXA3/RHOG/CEACAM1/BST1/CBL/CD58/CD59',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/XIAP/APOA4/RHOG/ARRB2/BCL3/BCL6/CEACAM1/POLR3D/BST1/C4BPA',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/RHOG/BCL3/BCL6/CEACAM1/BST1/CBL/CD86/CD58/CD59/CD63',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
)
data_dir <- tempdir()
scrape_revigo(data_dir, go_res)
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data
data_dir
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes('plot_X', 'plot_Y', colour = 'log10_p_value', size = 'plot_size'), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
min(revigo.data$log10_p_value), 0)
revigo.data$log10_p_value)
revigo.data$log10_p_value
min(revigo.data$log10_p_value)
head(go_res)
go_res <- data.frame(
p.val = c(1e-14, 1e-14, 1e-297, 1e-297, 1e-297, 1e-297, 1e-17, 1e-13),
genes = c('ADAM8/ALOX5/AMPD3/ANXA3/RHOG/CEACAM1/BST1/CBL/CD58/CD59',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/XIAP/APOA4/RHOG/ARRB2/BCL3/BCL6/CEACAM1/POLR3D/BST1/C4BPA',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/RHOG/BCL3/BCL6/CEACAM1/BST1/CBL/CD86/CD58/CD59/CD63',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10'),
row.names = c('GO:0009268', 'GO:0010447', 'GO:0000027', 'GO:0042255', 'GO:0042257', 'GO:0042273', 'GO:0030880', 'GO:0009775'),
)
go_res <- data.frame(
row.names = c('GO:0009268', 'GO:0010447', 'GO:0000027', 'GO:0042255', 'GO:0042257', 'GO:0042273', 'GO:0030880', 'GO:0009775'),
p.val = c(1e-14, 1e-14, 1e-297, 1e-297, 1e-297, 1e-297, 1e-17, 1e-13),
genes = c('ADAM8/ALOX5/AMPD3/ANXA3/RHOG/CEACAM1/BST1/CBL/CD58/CD59',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/XIAP/APOA4/RHOG/ARRB2/BCL3/BCL6/CEACAM1/POLR3D/BST1/C4BPA',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/RHOG/BCL3/BCL6/CEACAM1/BST1/CBL/CD86/CD58/CD59/CD63',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
)
go_res
#'             'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
#'             'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
#'             'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
#'             'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
#' )
#'
#' data_dir <- tempdir()
#' scrape_revigo(data_dir, go_res)
#'
#'
scrape_revigo <- function(data_dir, go_res) {
reticulate::use_virtualenv('revigo', required = TRUE)
unlink(data_dir, recursive = TRUE)
dir.create(data_dir, recursive = TRUE)
saveRDS(go_res, file.path(data_dir, 'go_res.rds'))
write.table(go_res[, 1, drop = FALSE], file.path(data_dir, 'goterms.txt'), quote = FALSE, col.names = FALSE, row.names = TRUE)
reticulate::source_python(system.file("python/scrape_revigo.py", package = "revigoR"))
scrape_revigo(data_dir)
files <- list.files(data_dir)
message("Saved: ", paste(files, collapse = ', '), ' into ', data_dir)
}
data_dir <- tempdir()
scrape_revigo(data_dir, go_res)
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
revigo.data
go_res <- data.frame(
go_id = c('GO:0002274', 'GO:0006955', 'GO:0002366', 'GO:0006751', 'GO:1901748', 'GO:0002218', 'GO:0072604', 'GO:0007249'),
genes = c('ADAM8/ALOX5/AMPD3/ANXA3/RHOG/CEACAM1/BST1/CBL/CD58/CD59',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/XIAP/APOA4/RHOG/ARRB2/BCL3/BCL6/CEACAM1/POLR3D/BST1/C4BPA',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/RHOG/BCL3/BCL6/CEACAM1/BST1/CBL/CD86/CD58/CD59/CD63',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
)
go_res <- data.frame(
row.names = c('GO:0002274', 'GO:0006955', 'GO:0002366', 'GO:0006751', 'GO:1901748', 'GO:0002218', 'GO:0072604', 'GO:0007249'),
p.val = c(2e-27, 4e-27, 6e-24, 5e-7, 5e-7, 1e-6, 1e-6, 1e-5),
genes = c('ADAM8/ALOX5/AMPD3/ANXA3/RHOG/CEACAM1/BST1/CBL/CD58/CD59',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/XIAP/APOA4/RHOG/ARRB2/BCL3/BCL6/CEACAM1/POLR3D/BST1/C4BPA',
'ADAM8/ALOX5/AMPD3/ANXA1/ANXA3/RHOG/BCL3/BCL6/CEACAM1/BST1/CBL/CD86/CD58/CD59/CD63',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
)
go_res
#'               'GGT1/GGT3P/GGT5/GGTLC2/GGTLC1/GGT2',
#'               'XIAP/ARRB2/FCER1G/FFAR2/HCK/IRAK2/LYN/MUC3A/MYD88/NFKB1/NFKBIA/PAK2/PLCG2/PRKCD/PRKDC/RELA/RELB',
#'               'IL1B/IL1RAP/MBP/HYAL2/LILRA2/C5AR2/TLR8/ZC3H12A/IL17RC/NLRP10/LILRA5',
#'               'BCL3/DDX1/IL1B/IL1RN/IRAK2/LTBR/MYD88/NFKBIA/RELA/RELB/ROCK1/SECTM1/TNFAIP3/TNFRSF1A/TRIM25/CFLAR/USP10')
#')
#'
#' data_dir <- tempdir()
#' scrape_revigo(data_dir, go_res)
#'
#'
scrape_revigo <- function(data_dir, go_res) {
reticulate::use_virtualenv('revigo', required = TRUE)
unlink(data_dir, recursive = TRUE)
dir.create(data_dir, recursive = TRUE)
saveRDS(go_res, file.path(data_dir, 'go_res.rds'))
write.table(go_res[, 1, drop = FALSE], file.path(data_dir, 'goterms.txt'), quote = FALSE, col.names = FALSE, row.names = TRUE)
reticulate::source_python(system.file("python/scrape_revigo.py", package = "revigoR"))
scrape_revigo(data_dir)
files <- list.files(data_dir)
message("Saved: ", paste(files, collapse = ', '), ' into ', data_dir)
}
data_dir <- tempdir()
scrape_revigo(data_dir, go_res)
data_dir
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'))
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes('plot_X', 'plot_Y', colour = 'log10_p_value', size = 'plot_size'), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
revigo_scatterplot <- function(data_dir) {
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X);
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y);
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes('plot_X', 'plot_Y', colour = 'log10_p_value', size = 'plot_size'), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
}
revigo_scatterplot(data_dir)
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE)
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$plot_X <- as.numeric( one.data$plot_X)
revigo.data$plot_Y <- as.numeric( one.data$plot_Y)
revigo.data$plot_size <- as.numeric( one.data$plot_size)
revigo.data$log10_p_value <- as.numeric(one.data$log10_p_value)
revigo.data$frequency <- as.numeric( one.data$frequency)
revigo.data$uniqueness <- as.numeric( one.data$uniqueness)
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$plot_X <- as.numeric(revigo.data$plot_X)
revigo.data$plot_Y <- as.numeric(revigo.data$plot_Y)
revigo.data$plot_size <- as.numeric(revigo.data$plot_size)
revigo.data$log10_p_value <- as.numeric(revigo.data$log10_p_value)
revigo.data$frequency <- as.numeric(revigo.data$frequency)
revigo.data$uniqueness <- as.numeric(revigo.data$uniqueness)
revigo.data$log10_p_value
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE, check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$plot_X <- as.numeric(revigo.data$plot_X)
revigo.data$plot_Y <- as.numeric(revigo.data$plot_Y)
revigo.data$plot_size <- as.numeric(revigo.data$plot_size)
revigo.data$log10_p_value <- as.numeric(revigo.data$log10_p_value)
revigo.data$frequency <- as.numeric(revigo.data$frequency)
revigo.data$uniqueness <- as.numeric(revigo.data$uniqueness)
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE, check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$plot_X <- as.numeric(revigo.data$plot_X)
revigo.data$plot_Y <- as.numeric(revigo.data$plot_Y)
revigo.data$plot_size <- as.numeric(revigo.data$plot_size)
revigo.data$log10_p_value <- as.numeric(revigo.data$`log10 p-value`)
revigo.data$frequency <- as.numeric(revigo.data$frequency)
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE, check.names = FALSE)
revigo.data
revigo.data$frequency <- gsub('%', '', revigo.data$frequency)
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), stringsAsFactors = FALSE, check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$frequency <- gsub('%', '', revigo.data$frequency)
revigo.data$plot_X <- as.numeric(revigo.data$plot_X)
revigo.data$plot_Y <- as.numeric(revigo.data$plot_Y)
revigo.data$plot_size <- as.numeric(revigo.data$plot_size)
revigo.data$log10_p_value <- as.numeric(revigo.data$`log10 p-value`)
revigo.data$frequency <- as.numeric(revigo.data$frequency)
revigo.data$uniqueness <- as.numeric(revigo.data$uniqueness)
revigo.data$dispensability <- as.numeric(revigo.data$dispensability)
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X)
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y)
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes('plot_X', 'plot_Y', colour = 'log10_p_value', size = 'plot_size'), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$frequency <- gsub('%', '', revigo.data$frequency))
revigo.data$plot_X <- as.numeric(as.character(revigo.data$plot_X))
revigo.data$plot_Y <- as.numeric(as.character(revigo.data$plot_Y))
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$frequency <- gsub('%', '', revigo.data$frequency)
revigo.data$plot_X <- as.numeric(as.character(revigo.data$plot_X))
revigo.data$plot_Y <- as.numeric(as.character(revigo.data$plot_Y))
revigo.data$plot_size <- as.numeric(as.character(revigo.data$plot_size))
revigo.data$log10_p_value <- as.numeric(as.character(revigo.data$`log10 p-value`))
revigo.data$frequency <- as.numeric(as.character(revigo.data$frequency))
revigo.data$uniqueness <- as.numeric(as.character(revigo.data$uniqueness))
revigo.data$dispensability <- as.numeric(as.character(revigo.data$dispensability))
ex <- revigo.data [ revigo.data$dispensability < 0.15, ]
one.x_range = max(revigo.data$plot_X) - min(revigo.data$plot_X)
one.y_range = max(revigo.data$plot_Y) - min(revigo.data$plot_Y)
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes('plot_X', 'plot_Y', colour = 'log10_p_value', size = 'plot_size'), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
revigo.data
revigo.names <- c("term_ID","description","frequency_%","plot_X","plot_Y","plot_size","log10_p_value","uniqueness","dispensability");
revigo.data <- rbind(c("GO:0002274","myeloid leukocyte activation", 0.033,-0.780,-6.797, 3.622,-26.6990,0.254,0.000),
c("GO:0006751","glutathione catabolic process", 0.074, 5.846,-1.272, 3.977,-6.3010,0.623,0.021),
c("GO:0007249","I-kappaB kinase/NF-kappaB signaling", 0.057,-0.960, 5.863, 3.861,-5.0000,0.526,0.053),
c("GO:0072604","interleukin-6 secretion", 0.005,-5.324,-0.788, 2.822,-6.0000,0.650,0.104),
c("GO:1901748","leukotriene D4 metabolic process", 0.000, 5.787, 0.468, 1.477,-6.3010,0.576,0.389));
one.data <- data.frame(revigo.data);
names(one.data) <- revigo.names;
one.data <- one.data [(one.data$plot_X != "null" & one.data$plot_Y != "null"), ];
one.data$plot_X <- as.numeric( as.character(one.data$plot_X) );
one.data$plot_Y <- as.numeric( as.character(one.data$plot_Y) );
one.data$plot_size <- as.numeric( as.character(one.data$plot_size) );
one.data$log10_p_value <- as.numeric( as.character(one.data$log10_p_value) );
one.data$frequency <- as.numeric( as.character(one.data$frequency) );
one.data$uniqueness <- as.numeric( as.character(one.data$uniqueness) );
one.data$dispensability <- as.numeric( as.character(one.data$dispensability) );
#head(one.data);
one.data
revigo.data
# load revigo data
revigo.data <- read.csv(file.path(data_dir, 'rsc.csv'), check.names = FALSE)
revigo.data <- revigo.data[(revigo.data$plot_X != "null" & revigo.data$plot_Y != "null"), ]
revigo.data$frequency <- gsub('%', '', revigo.data$frequency)
revigo.data$plot_X <- as.numeric(as.character(revigo.data$plot_X))
revigo.data$plot_Y <- as.numeric(as.character(revigo.data$plot_Y))
revigo.data$plot_size <- as.numeric(as.character(revigo.data$plot_size))
revigo.data$log10_p_value <- as.numeric(as.character(revigo.data$`log10 p-value`))
revigo.data$frequency <- as.numeric(as.character(revigo.data$frequency))
revigo.data$uniqueness <- as.numeric(as.character(revigo.data$uniqueness))
revigo.data$dispensability <- as.numeric(as.character(revigo.data$dispensability))
revigo.data
one.data
p1 <- ggplot2::ggplot(data = revigo.data) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, colour = log10_p_value, size = plot_size), alpha = I(0.6)) +
ggplot2::scale_size_area() +
ggplot2::scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"), limits = c(min(revigo.data$log10_p_value), 0)) +
ggplot2::geom_point(ggplot2::aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (ggplot2::alpha("black", 0.6))) +
ggplot2::scale_size_area() +
ggplot2::scale_size(range=c(5, 30)) +
ggplot2::theme_bw() +
ggplot2::geom_text(data = ex, ggplot2::aes(plot_X, plot_Y, label = description), colour = I(ggplot2::alpha("black", 0.85)), size = 3) +
ggplot2::labs (y = "semantic space x", x = "semantic space y") +
ggplot2::theme(legend.key = ggplot2::element_blank()) +
ggplot2::xlim(min(revigo.data$plot_X)-one.x_range/10,max(revigo.data$plot_X)+one.x_range/10) +
ggplot2::ylim(min(revigo.data$plot_Y)-one.y_range/10,max(revigo.data$plot_Y)+one.y_range/10)
p1
revigo.data
